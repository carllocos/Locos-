#lang racket
(require "locoADT"
         "trainStopADT"
         "switch"
         "rail-segmentADT"
         "signalADT"
         "label-unweighted-graph"
         "hulpprocedures")
(provide new-rwm
         get-graph
         get-locos
         get-switchs
         get-nodes
         get-tracks
         get-detections
         get-signals)


(define (get-graph rwm)
  (vector-ref rwm 0))
(define (get-locos rwm)
  (vector-ref rwm 1))
(define (get-nodes rwm)
  (vector-ref rwm 2))
(define (get-switchs rwm)
  (vector-ref rwm 3))
(define (get-tracks rwm)
  (vector-ref 4))
(define (get-detections rwm)
  5)

;;Deze procedure zal per conventie in een vector resulteren waarbij de elementen lijsten zijn van
;;resp. Locos, nodes, switchs, tracks, detections en signals

; (display model))

(define (v-for-each v proc)
  (define length (vector-length v))
  (let loop ((i 0))
    (when (< i length)
      (proc (vector-ref v i))
      (loop (+ i 1)))))
(define set-up '())

;(define t (vector-ref (new-rwm "be_simple.txt") 0))
;(t 'display)
