#lang racket
;(require scheme/mpair)

(provide new-loco)


(define (new-loco id id-n1 id-n2)
  (define distance 0)
  (define speed 0)
  (define (set-id-n1! new)
    (set! id-n1 new))
  (define (set-id-n2! new)
    (set! id-n2 new))
  (define (set-speed! new)
    (set! speed new))
  (define (set-distance! new)
    (set! distance new))
  (lambda(msg)
    (cond((eq? msg 'get-id) id)
         ((eq? msg 'get-id-n1) id-n1)
         ((eq? msg 'get-id-n2) id-n2)
         ((eq? msg 'set-id-n1!) set-id-n1!)
         ((eq? msg 'set-id-n2!) set-id-n2!)
         ((eq? msg 'get-distance) distance)
         ((eq? msg 'set-distance!) set-distance!)
         ((eq? msg 'get-speed) speed)
         ((eq? msg 'set-speed!)set-speed!)
         (else (error "unknown message--loco")))))